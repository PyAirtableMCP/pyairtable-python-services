# OpenTelemetry Configuration Template
# Copy this file to .env.otel and update values for your environment

# ============================================================================
# OTLP Exporter Configuration
# ============================================================================

# OTLP Endpoint for traces (Tempo via OTEL Collector)
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317

# OTLP Endpoint for metrics (Mimir via OTEL Collector)
OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://localhost:4318

# OTLP Protocol (grpc or http/protobuf)
OTEL_EXPORTER_OTLP_PROTOCOL=grpc

# OTLP Headers (if authentication is required)
# OTEL_EXPORTER_OTLP_HEADERS=api-key=your-api-key

# ============================================================================
# Service Configuration
# ============================================================================

# Environment (development, staging, production)
ENVIRONMENT=development

# Service Version (should match your deployment version)
SERVICE_VERSION=1.0.0

# Deployment Environment Labels
DEPLOYMENT_ENVIRONMENT=local

# ============================================================================
# Sampling Configuration
# ============================================================================

# Sampling Ratio (0.0 to 1.0)
# Production: 0.1 (10%), Development: 1.0 (100%)
OTEL_SAMPLING_RATIO=1.0

# Enable debug mode for OpenTelemetry
OTEL_DEBUG=true

# ============================================================================
# Resource Attributes
# ============================================================================

# Platform Information
OTEL_RESOURCE_ATTRIBUTES=platform.name=pyairtable,platform.cluster=pyairtable-platform,deployment.environment=local

# ============================================================================
# Service-Specific Ports (for resource attributes)
# ============================================================================

# LLM Orchestrator
LLM_ORCHESTRATOR_PORT=8003

# Airtable Gateway
AIRTABLE_GATEWAY_PORT=8002

# MCP Server
MCP_SERVER_PORT=8001

# Automation Services
AUTOMATION_SERVICES_PORT=8006

# ============================================================================
# Logging Configuration
# ============================================================================

# Log Level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Structured Logging Format (json, text)
LOG_FORMAT=json

# Loki Endpoint for structured logging
LOKI_ENDPOINT=http://localhost:3100

# ============================================================================
# Jaeger Configuration (Fallback)
# ============================================================================

# Jaeger Endpoint (if OTLP fails)
JAEGER_ENDPOINT=http://localhost:14268/api/traces

# Jaeger Agent Host
JAEGER_AGENT_HOST=localhost

# Jaeger Agent Port
JAEGER_AGENT_PORT=6831

# ============================================================================
# Performance and Cost Tracking
# ============================================================================

# Enable cost tracking for LLM calls
ENABLE_LLM_COST_TRACKING=true

# Performance monitoring thresholds (milliseconds)
PERFORMANCE_THRESHOLD_FAST=100
PERFORMANCE_THRESHOLD_NORMAL=500
PERFORMANCE_THRESHOLD_SLOW=2000
PERFORMANCE_THRESHOLD_VERY_SLOW=10000

# ============================================================================
# Business Context Attributes
# ============================================================================

# Cost Center for tracking
COST_CENTER=engineering

# Business Unit
BUSINESS_UNIT=platform

# Team
TEAM=backend

# ============================================================================
# Security Configuration
# ============================================================================

# Enable TLS for OTLP (true/false)
OTEL_EXPORTER_OTLP_INSECURE=true

# Certificate paths (if TLS is enabled)
# OTEL_EXPORTER_OTLP_CERTIFICATE=/path/to/cert.pem
# OTEL_EXPORTER_OTLP_PRIVATE_KEY=/path/to/key.pem
# OTEL_EXPORTER_OTLP_CA_CERTIFICATE=/path/to/ca.pem

# ============================================================================
# Advanced Configuration
# ============================================================================

# Batch span processor configuration
OTEL_BSP_MAX_QUEUE_SIZE=2048
OTEL_BSP_MAX_EXPORT_BATCH_SIZE=512
OTEL_BSP_EXPORT_TIMEOUT=30000
OTEL_BSP_SCHEDULE_DELAY=5000

# Metric export interval (milliseconds)
OTEL_METRIC_EXPORT_INTERVAL=60000

# Propagators (b3multi,jaeger,tracecontext,baggage)
OTEL_PROPAGATORS=b3multi,jaeger

# ============================================================================
# Local LGTM Stack Configuration
# ============================================================================

# Grafana
GRAFANA_URL=http://localhost:3000

# Tempo
TEMPO_URL=http://localhost:3200

# Loki
LOKI_URL=http://localhost:3100

# Mimir/Prometheus
MIMIR_URL=http://localhost:9009
PROMETHEUS_URL=http://localhost:9090

# OTEL Collector
OTEL_COLLECTOR_URL=http://localhost:4317
OTEL_COLLECTOR_METRICS_URL=http://localhost:4318
OTEL_COLLECTOR_HEALTH_URL=http://localhost:13133

# ============================================================================
# Usage Instructions
# ============================================================================
#
# 1. Copy this file to each service directory:
#    cp .env.otel.template python-services/llm-orchestrator/.env.otel
#    cp .env.otel.template python-services/airtable-gateway/.env.otel
#    cp .env.otel.template python-services/mcp-server/.env.otel
#    cp .env.otel.template pyairtable-automation-services/.env.otel
#
# 2. Update service-specific values in each .env.otel file
#
# 3. Source the environment file before starting services:
#    source .env.otel && python src/main.py
#
# 4. Or use docker-compose with env_file:
#    env_file:
#      - .env.otel
#
# ============================================================================